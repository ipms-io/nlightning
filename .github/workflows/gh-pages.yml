# Your GitHub workflow file under .github/workflows/
# Trigger the action on push to main
on:
  workflow_run:
    workflows: [ "NLightning Combined Coverage Report (Push)" ]
    types:
      - completed
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Dotnet Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
        
    - name: Download Coverage Reports
      uses: dawidd6/action-download-artifact@v3
      continue-on-error: true # Allow the docs to build even if there are no coverage reports
      with:
        workflow: combined-report.yml
        name: coverage-docfx
        path: .docfx/docs/coverage-reports/

    - run: dotnet tool update -g docfx
    - run: docfx .docfx/docfx.json

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: '.docfx/_site'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
  