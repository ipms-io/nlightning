@page "/version"
@using System.Reflection

<PageTitle>Home</PageTitle>

<div class="bd-intro pt-2 ps-lg-2">
    <div class="d-md-flex align-items-center">
        <h1 class="bd-title mb-0">This demo uses the following versions of these assemblies:</h1>
    </div>
    <ol class="list-group list-group-numbered">
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">This Demo Assembly Version</div>
                @($"v{demoAssemblyVersion}")
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">NLightning.Bolt11.Blazor</div>
                @($"v{bolt11AssemblyVersion}")
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">BlazorDeferredRemove.Components</div>
                @($"v{blazorDeferredRemoveAssemblyVersion}")
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Microsoft.AspNetCore.Components.WebAssembly</div>
                @($"v{webAssemblyAssemblyVersion}")
            </div>
        </li>
    </ol>
</div>

@code {

    private string blazorDeferredRemoveAssemblyVersion;
    private string webAssemblyAssemblyVersion;
    private string bolt11AssemblyVersion;
    private string demoAssemblyVersion;
    
    protected override void OnInitialized()
    {
        var callbackOnCssTransitionEnd = typeof(BlazorDeferredRemove.Components.CallbackOnCssTransitionEnd);
        var assembly = callbackOnCssTransitionEnd.Assembly;
        var version = assembly.GetName().Version;
        blazorDeferredRemoveAssemblyVersion = version?.ToString() ?? "(no version)";
        
        var lazyAssemblyLoader = typeof(Microsoft.AspNetCore.Components.WebAssembly.Services.LazyAssemblyLoader);
        assembly = lazyAssemblyLoader.Assembly;
        version = assembly.GetName().Version;
        webAssemblyAssemblyVersion = version?.ToString() ?? "(no version)";
        
        var invoiceAssemblyLoader = typeof(NLightning.Bolts.BOLT11.Invoice);
        assembly = invoiceAssemblyLoader.Assembly;
        version = assembly.GetName().Version;
        bolt11AssemblyVersion = version?.ToString() ?? "(no version)";
        
        assembly = Assembly.GetExecutingAssembly();
        version = assembly.GetName().Version;
        demoAssemblyVersion = version?.ToString() ?? "(no version)";
    }
}