<Project>
  
  <!--  Import regular sdk if the configuration calls for it  -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' And !$(Configuration.Contains('.Wasm'))"/>
  <!--  Import blazor sdk if the configuration calls for it  -->
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk.Razor" Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' Or $(Configuration.Contains('.Wasm'))"/>

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Version>0.2.0</Version>
    <Configurations>Debug;Debug.Native;Debug.Wasm;Release;Release.Native;Release.Wasm</Configurations>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <PropertyGroup>
    <Authors>Nickolas Goline</Authors>
    <Description>A Bitcoin Lightning Invoice Decoder/Encoder implemented in C#</Description>
    <Copyright>Copyright © Níckolas Goline 2024</Copyright>
    <RepositoryUrl>https://github.com/ipms-io/nlightning</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <AssemblyVersion>0.2.0</AssemblyVersion>
    <FileVersion>0.2.0</FileVersion>
    <NeutralLanguage>en</NeutralLanguage>
    <Icon>logo.png</Icon>
    <PackageTags>lightning,invoice,bolt11,encoder,decoder</PackageTags>
    <PackageProjectUrl>https://nlightning.ipms.io/api/NLightning.Bolts.BOLT11.html</PackageProjectUrl>
    <PackageIcon>logo.png</PackageIcon>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageId>NLightning.Bolt11</PackageId>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\NLightning.Common\BitUtils\*.cs" LinkBase="Common\BitUtils"/>
    <Compile Include="..\NLightning.Common\Constants\CryptoConstants.cs" LinkBase="Common\Constants"/>
    <Compile Include="..\NLightning.Common\Constants\NetworkConstants.cs" LinkBase="Common\Constants"/>
    <Compile Include="..\NLightning.Common\Crypto\Ciphers\*.cs" LinkBase="Common\Crypto\Ciphers"/>
    <Compile Include="..\NLightning.Common\Crypto\Functions\*.cs" LinkBase="Common\Crypto\Functions"/>
    <Compile Include="..\NLightning.Common\Crypto\Hashes\*.cs" LinkBase="Common\Crypto\Hashes"/>
    <Compile Include="..\NLightning.Common\Crypto\Primitives\*.cs" LinkBase="Common\Crypto\Primitives"/>
    <Compile Include="..\NLightning.Common\Exceptions\*.cs" LinkBase="Common\Exceptions"/>
    <Compile Include="..\NLightning.Common\Extensions\BitArrayExtension.cs" LinkBase="Common\Extensions"/>
    <Compile Include="..\NLightning.Common\Factories\Crypto\CryptoFactory.cs" LinkBase="Common\Factories"/>
    <Compile Include="..\NLightning.Common\Interfaces\Crypto\*.cs" LinkBase="Common\Interfaces"/>
    <Compile Include="..\NLightning.Common\Managers\*.cs" LinkBase="Common\Managers"/>
    <Compile Include="..\NLightning.Common\Types\Network.cs" LinkBase="Common\Types"/>
    <Compile Include="..\NLightning.Common\Types\ShortChannelId.cs" LinkBase="Common\Types"/>
    <Compile Include="..\NLightning.Bolts\BOLT9\**\*.cs" LinkBase="Bolts\BOLT9"/>
    <Compile Include="..\NLightning.Bolts\BOLT11\**\*.cs" LinkBase="Bolts\BOLT11"/>
    <Compile Include="..\NLightning.Bolts\Exceptions\InvoiceSerializationException.cs" LinkBase="Bolts\Exceptions"/>
  </ItemGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DefineConstants>DEBUG;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Release'))">
    <Optimize Condition=" '$(Optimize)' == '' ">true</Optimize>
  </PropertyGroup>

  <!-- Check if this is being used in WASM projects -->
  <PropertyGroup Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' Or $(Configuration.Contains('.Wasm'))">
    <DefineConstants>CRYPTO_JS;$(DefineConstants)</DefineConstants>
    <PackageId>NLightning.Bolt11.Blazor</PackageId>
    <AssemblyName>NLightning.Bolt11.Blazor</AssemblyName>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
  </PropertyGroup>

  <ItemGroup Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' Or $(Configuration.Contains('.Wasm'))">
    <Compile Include="..\NLightning.Common\Crypto\Providers\JS\*.cs" LinkBase="Common\Crypto\Providers\JS"/>

    <Content Include="..\NLightning.Common\wwwroot\*.js" LinkBase="wwwroot"/>
    <Content Include="..\NLightning.Common\wwwroot\*.gz" LinkBase="wwwroot"/>
    <Content Include="..\NLightning.Common\wwwroot\*.br" LinkBase="wwwroot"/>

    <PackageReference Include="Microsoft.JSInterop" Version="8.0.8"/>
  </ItemGroup>

  <!-- Check if this is being used in AOT projects -->
  <PropertyGroup Condition="'$(PublishAot)' == 'true' Or $(Configuration.Contains('.Native'))">
    <DefineConstants>CRYPTO_NATIVE;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="'$(PublishAot)' == 'true' Or $(Configuration.Contains('.Native'))">
    <Compile Include="..\NLightning.Common\Crypto\Providers\Native\*.cs" LinkBase="Common\Crypto\Providers\Native"/>
  </ItemGroup>

  <!-- Check if this is being used in non-AOT and non-WASM projects -->
  <PropertyGroup Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' And '$(PublishAot)' != 'true' And !$(Configuration.Contains('.Wasm')) And !$(Configuration.Contains('.Native'))">
    <DefineConstants>CRYPTO_LIBSODIUM;$(DefineConstants)</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' And '$(PublishAot)' != 'true' And !$(Configuration.Contains('.Wasm')) And !$(Configuration.Contains('.Native'))">
    <Compile Include="..\NLightning.Common\Crypto\Providers\Libsodium\*.cs" LinkBase="Common\Crypto\Providers\Libsodium"/>

    <PackageReference Include="libsodium" Version="1.0.19"/>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="NBitcoin" Version="7.0.37"/>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\images\logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <!--  Import regular sdk if the configuration calls for it  -->
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' != 'true' And !$(Configuration.Contains('.Wasm'))"/>
  <!--  Import blazor sdk if the configuration calls for it  -->
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk.Razor" Condition="'$(UsingMicrosoftNETSdkBlazorWebAssembly)' == 'true' Or $(Configuration.Contains('.Wasm'))"/>

</Project>
